{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";ghBACA,smNAIA,IAAOA,EAAsDC,EAAAA,EAAAA,cAAvCC,EAAuCD,EAAAA,EAAAA,iBAArBE,EAAqBF,EAAAA,EAAAA,kBAEvDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAmCF,QAhC8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,wCACE,MAAI,uBAECP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ5B,EAKxB,EACME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EACMY,cAAa,SAACC,GAAY,oGACzBA,EAAWC,eAAe,MAAO,CAAF,wCAC3B,MAAI,uBAECb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAJ5B,EAKhC,EACMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,EACMS,kBAAiB,SAACC,GAAO,4HACf,EAAKR,oBAAmB,uCAAES,QAAO,SAACN,GAC9C,IACMO,GAD6BP,EAAWQ,MAAQ,KAAKC,cACJC,QAAQ,MAAO,IAGhEC,EADmBN,EAAMI,cACMC,QAAQ,MAAO,IAEpD,OAAsD,IAA/CH,EAAqBK,QAAQD,EACtC,KAAC,0CAT4B,EAU/B,gDCnCF,QALqB,CACnBE,KAAM,GAAF,OAAK5B,EAAAA,EAAAA,SAAe,QACxB6B,OAAQ,SAACnB,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCHhD,4wNAkBA,QAjBwB,yBADxB,4FACwB,SADxB,QAMG,EALqB,EAcrB,OAfH,EACwB,OADxB,EACwB,4CACtB,sGACyBoB,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BzB,GAAE,gGAELoB,MAAMC,EAAAA,OAAoBrB,IAAI,OAAvC,OAARsB,EAAW,EAAH,uBACPA,EAASC,QAAM,8DAEfG,GAAS,yDAEnB,+CAfH,6DAeG,EAdqB,mCCSxB,QAXe,CACbC,SAAU,uCACVC,eAAgB,oDAChBC,qBAAsB,oDACtBC,iBAAkB,QAClBC,WAAY,iBACZ1C,cAAe,oBACfE,iBAAkB,EAClBC,kBAAmB,wECFfwC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,SAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,kBAIlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://tugas-submission-katalog-restoran-pwa-testing-and-optimized-_muhammad-rendy-pratama/./src/scripts/data/favorite-restaurant-idb.js","webpack://tugas-submission-katalog-restoran-pwa-testing-and-optimized-_muhammad-rendy-pratama/./src/scripts/globals/api-endpoint.js","webpack://tugas-submission-katalog-restoran-pwa-testing-and-optimized-_muhammad-rendy-pratama/./src/scripts/data/restaurant-source.js","webpack://tugas-submission-katalog-restoran-pwa-testing-and-optimized-_muhammad-rendy-pratama/./src/scripts/globals/config.js","webpack://tugas-submission-katalog-restoran-pwa-testing-and-optimized-_muhammad-rendy-pratama/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable no-prototype-builtins */\n/* eslint-disable object-curly-spacing */\nimport {openDB} from 'idb';\nimport CONFIG from '../globals/config';\n\nconst {DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME} = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestaurantIdb = {\n  async getRestaurant(id) {\n    if (!id) {\n      return null;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestaurants() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putRestaurant(restaurant) {\n    if (!restaurant.hasOwnProperty('id')) {\n      return null;\n    }\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n  },\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n  async searchRestaurants(query) {\n    return (await this.getAllRestaurants()).filter((restaurant) => {\n      const loweredCaseRestaurantName = (restaurant.name || '-').toLowerCase();\n      const jammedRestaurantName = loweredCaseRestaurantName.replace(/\\s/g, '');\n\n      const loweredCaseQuery = query.toLowerCase();\n      const jammedQuery = loweredCaseQuery.replace(/\\s/g, '');\n\n      return jammedRestaurantName.indexOf(jammedQuery) !== -1;\n    });\n  },\n};\n\nexport default FavoriteRestaurantIdb;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  LIST: `${CONFIG.BASE_URL}list`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass RestaurantDbSource {\n  static async listRestaurant() {\n    const response = await fetch(API_ENDPOINT.LIST);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async detailRestaurant(id) {\n    try {\n      const response = await fetch(API_ENDPOINT.DETAIL(id));\n      return response.json();\n    } catch (err) {\n      return undefined;\n    }\n  }\n}\n\nexport default RestaurantDbSource;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/large/',\n  BASE_IMAGE_SMALL_URL: 'https://restaurant-api.dicoding.dev/images/small/',\n  DEFAULT_LANGUAGE: 'en-us',\n  CACHE_NAME: 'enakdong-cache',\n  DATABASE_NAME: 'enakdong-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restaurants',\n};\n\nexport default CONFIG;\n","import 'regenerator-runtime';\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\nconst app = new App({\n  button: document.querySelector('#menu'),\n  drawer: document.querySelector('#drawer'),\n  content: document.querySelector('#kontenutama'),\n\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","filter","jammedRestaurantName","name","toLowerCase","replace","jammedQuery","indexOf","LIST","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","undefined","BASE_URL","BASE_IMAGE_URL","BASE_IMAGE_SMALL_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}